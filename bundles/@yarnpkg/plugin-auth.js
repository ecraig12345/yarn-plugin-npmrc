/* eslint-disable */
//prettier-ignore
module.exports = {
name: "@yarnpkg/plugin-auth",
factory: function (require) {
"use strict";var plugin=(()=>{var H=Object.create;var f=Object.defineProperty;var I=Object.getOwnPropertyDescriptor;var v=Object.getOwnPropertyNames;var $=Object.getPrototypeOf,w=Object.prototype.hasOwnProperty;var m=(t=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(t,{get:(o,e)=>(typeof require<"u"?require:o)[e]}):t)(function(t){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+t+'" is not supported')});var x=(t,o)=>{for(var e in o)f(t,e,{get:o[e],enumerable:!0})},S=(t,o,e,n)=>{if(o&&typeof o=="object"||typeof o=="function")for(let i of v(o))!w.call(t,i)&&i!==e&&f(t,i,{get:()=>o[i],enumerable:!(n=I(o,i))||n.enumerable});return t};var g=(t,o,e)=>(e=t!=null?H($(t)):{},S(o||!t||!t.__esModule?f(e,"default",{value:t,enumerable:!0}):e,t)),j=t=>S(f({},"__esModule",{value:!0}),t);var D={};x(D,{default:()=>V});var p=m("@yarnpkg/core"),C=g(m("fs")),b=g(m("os")),h=g(m("path")),M={customAuthRegistries:{description:"Partial npm registry URLs to match, e.g. yourteam.pkgs.visualstudio.com",type:p.SettingsType.STRING,isArray:!0,default:null},customAuthNpmrcPath:{description:"Required: Path to the .npmrc file with the token. Can be relative to the project root, absolute, or start with ~/ for relative to the home directory.",type:p.SettingsType.STRING,isNullable:!1,default:null},customAuthNpmrcPathCI:{description:"Path to the .npmrc file with the token in CI, if different from local. Same substitutions apply.",type:p.SettingsType.STRING,default:null}},R,a,d={},B={async validateProject(t){R=t.cwd},async getNpmAuthenticationHeader(t,o,{configuration:e,ident:n}){let i=G(e),s=i.customAuthRegistries?.find(r=>o.startsWith(`https://${r}`));if(!s)return t;if(d[s])return d[s];let u=e.isCI&&i.customAuthNpmrcPathCI||i.customAuthNpmrcPath;u||y("Missing customAuthNpmrcPath in .yarnrc.yml"),C.default.existsSync(u)||y(`${u} does not exist`);let T=C.default.readFileSync(u,"utf8").split(/\r?\n/g),k=/:_(password|authToken|auth)="?([^"]+)/,A=T.find(r=>r.includes(s)&&k.test(r));A||y(`Couldn't find a token/password in ${u} matching "${s}". Have you set up npm registry auth according to your repo's instructions?`);let P=A.match(k)||[],N=P[1],l=P[2].trim(),c;if(N==="password"){let r=Buffer.from(l,"base64").toString("utf8");c=Buffer.from(`VssSessionToken:${r}`).toString("base64")}else N==="authToken"?c=Buffer.from(`VssSessionToken:${l}`).toString("base64"):c=l;return d[s]=`Basic ${c}`}};function G(t){if(a)return a;a={};for(let o of Object.keys(M)){let e=t.get(o);if(e!=null){if(o==="customAuthNpmrcPath"||o==="customAuthNpmrcPathCI"){let n=e;n.startsWith("~")?e=h.default.join(b.default.homedir(),n.slice(1)):h.default.isAbsolute(n)?e=n:e=h.default.resolve(R||"",n)}a[o]=e}}return a}function y(t){console.error(`
\x1B[31;1m[yarn-plugin-auth] Error getting npm registry auth token: ${t}\x1B[0m
`),process.exit(1)}var L={hooks:B},V=L;return j(D);})();
return plugin;
}
};
